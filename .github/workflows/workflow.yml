name: Run TDD and BDD Python Tests
on:
  push:
    branches:
      - main
      - "bdd_ui"
  pull_request:
    branches:
      - main
      - "bdd_ui"

jobs:
  build: # Job name
    runs-on: ubuntu-latest
    # use a known build environment
    container: python:3.8-slim

    # Required services
    services:
      # Label used to access the service container
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env: # Environemnt for the job
      DATABASE_URI: "postgres://postgres:postgres@postgres:5432/testdb"

    # Steps for the build
    steps:
      - name: Checkout
        uses: actions/checkout@v2 # Uses "actions/checkout@v2" to fetch a commmit

      - name: Install dependencies
        run: |
          # Chrome
          apt-get update
          # apt-get -qq install -y chromium-driver python3-selenium curl > /dev/null
          apt-get install -y curl
          # Python stuff
          python -m pip install --upgrade pip wheel
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run unit tests with nose
        run: nosetests

      - name: Upload code coverage
        uses: codecov/codecov-action@v2

      - name: Install Chrome Driver
        run: |
          # Chrome driver for Selenium
          LATEST_CHROMEDRIVER_VERSION=`curl -s "https://chromedriver.storage.googleapis.com/LATEST_RELEASE"`
          curl "https://chromedriver.storage.googleapis.com/${LATEST_CHROMEDRIVER_VERSION}/chromedriver_linux64.zip" -O+
          unzip chromedriver_linux64.zip -d ~/bin
          chromedriver --version

      - name: Running BDD
        run: |
          gunicorn --log-level=critical --bind=127.0.0.1:8080 service:app & # start a Web server in the background
          sleep 10 # give Web server some time to bind to sockets, etc
          curl -I http://localhost:8080/  # make sure the service is up
          behave
